/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `BigInt` scalar type represents non-fractional signed whole numeric values. BigInt can represent values between -(2^53) + 1 and 2^53 - 1. 
     */
    BigInt<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "BigInt";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `BigInt` scalar type represents non-fractional signed whole numeric values. BigInt can represent values between -(2^53) + 1 and 2^53 - 1. 
     */
    BigInt<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "BigInt";
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  commentWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  interestUser_idPost_idCompoundUniqueInput: { // input type
    post_id: string; // String!
    user_id: string; // String!
  }
  interestWhereUniqueInput: { // input type
    user_id_post_id?: NexusGenInputs['interestUser_idPost_idCompoundUniqueInput'] | null; // interestUser_idPost_idCompoundUniqueInput
  }
  postWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  post_tag_refTag_namePost_idCompoundUniqueInput: { // input type
    post_id: string; // String!
    tag_name: string; // String!
  }
  post_tag_refWhereUniqueInput: { // input type
    tag_name_post_id?: NexusGenInputs['post_tag_refTag_namePost_idCompoundUniqueInput'] | null; // post_tag_refTag_namePost_idCompoundUniqueInput
  }
  readUser_idPost_idCompoundUniqueInput: { // input type
    post_id: string; // String!
    user_id: string; // String!
  }
  readWhereUniqueInput: { // input type
    user_id_post_id?: NexusGenInputs['readUser_idPost_idCompoundUniqueInput'] | null; // readUser_idPost_idCompoundUniqueInput
  }
  userWhereUniqueInput: { // input type
    id?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  BigInt: any
  DateTime: any
  Json: any
}

export interface NexusGenObjects {
  Query: {};
  comment: { // root type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    reply_to: string; // String!
    text: string; // String!
  }
  interest: { // root type
    created_at?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  post: { // root type
    content: string; // String!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    hidden: boolean; // Boolean!
    id: string; // String!
    pre_content: string; // String!
    thumbnail?: string | null; // String
    title: string; // String!
    url: string; // String!
    user_id: string; // String!
  }
  post_group: { // root type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    name: string; // String!
    priority?: NexusGenScalars['Json'] | null; // Json
  }
  post_tag_ref: {};
  post_temp: { // root type
    content?: string | null; // String
    post_id: string; // String!
    title?: string | null; // String
  }
  read: { // root type
    created_at?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  tag: { // root type
    created_at?: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
  }
  user: { // root type
    email: string; // String!
    id: string; // String!
    image?: string | null; // String
    introduction?: string | null; // String
    social?: NexusGenScalars['Json'] | null; // Json
    velog_name: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Query: { // field return type
    post: NexusGenRootTypes['post'] | null; // post
    user: NexusGenRootTypes['user'] | null; // user
  }
  comment: { // field return type
    comment: NexusGenRootTypes['comment']; // comment!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    other_comment: NexusGenRootTypes['comment'][]; // [comment!]!
    post: NexusGenRootTypes['post']; // post!
    reply_to: string; // String!
    text: string; // String!
    user: NexusGenRootTypes['user']; // user!
  }
  interest: { // field return type
    created_at: NexusGenScalars['DateTime'] | null; // DateTime
    post: NexusGenRootTypes['post']; // post!
    user: NexusGenRootTypes['user']; // user!
  }
  post: { // field return type
    comment: NexusGenRootTypes['comment'][]; // [comment!]!
    content: string; // String!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    hidden: boolean; // Boolean!
    id: string; // String!
    interest: NexusGenRootTypes['interest'][]; // [interest!]!
    post_tag_ref: NexusGenRootTypes['post_tag_ref'][]; // [post_tag_ref!]!
    post_temp: NexusGenRootTypes['post_temp'] | null; // post_temp
    pre_content: string; // String!
    read: NexusGenRootTypes['read'][]; // [read!]!
    thumbnail: string | null; // String
    title: string; // String!
    url: string; // String!
    user: NexusGenRootTypes['user']; // user!
    user_id: string; // String!
  }
  post_group: { // field return type
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    name: string; // String!
    priority: NexusGenScalars['Json'] | null; // Json
    user: NexusGenRootTypes['user']; // user!
  }
  post_tag_ref: { // field return type
    post: NexusGenRootTypes['post']; // post!
    tag: NexusGenRootTypes['tag']; // tag!
  }
  post_temp: { // field return type
    content: string | null; // String
    post: NexusGenRootTypes['post']; // post!
    post_id: string; // String!
    title: string | null; // String
  }
  read: { // field return type
    created_at: NexusGenScalars['DateTime'] | null; // DateTime
    post: NexusGenRootTypes['post']; // post!
    user: NexusGenRootTypes['user']; // user!
  }
  tag: { // field return type
    created_at: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    post_tag_ref: NexusGenRootTypes['post_tag_ref'][]; // [post_tag_ref!]!
  }
  user: { // field return type
    email: string; // String!
    id: string; // String!
    image: string | null; // String
    introduction: string | null; // String
    social: NexusGenScalars['Json'] | null; // Json
    velog_name: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Query: { // field return type name
    post: 'post'
    user: 'user'
  }
  comment: { // field return type name
    comment: 'comment'
    created_at: 'DateTime'
    id: 'String'
    other_comment: 'comment'
    post: 'post'
    reply_to: 'String'
    text: 'String'
    user: 'user'
  }
  interest: { // field return type name
    created_at: 'DateTime'
    post: 'post'
    user: 'user'
  }
  post: { // field return type name
    comment: 'comment'
    content: 'String'
    created_at: 'DateTime'
    hidden: 'Boolean'
    id: 'String'
    interest: 'interest'
    post_tag_ref: 'post_tag_ref'
    post_temp: 'post_temp'
    pre_content: 'String'
    read: 'read'
    thumbnail: 'String'
    title: 'String'
    url: 'String'
    user: 'user'
    user_id: 'String'
  }
  post_group: { // field return type name
    created_at: 'DateTime'
    id: 'String'
    name: 'String'
    priority: 'Json'
    user: 'user'
  }
  post_tag_ref: { // field return type name
    post: 'post'
    tag: 'tag'
  }
  post_temp: { // field return type name
    content: 'String'
    post: 'post'
    post_id: 'String'
    title: 'String'
  }
  read: { // field return type name
    created_at: 'DateTime'
    post: 'post'
    user: 'user'
  }
  tag: { // field return type name
    created_at: 'DateTime'
    name: 'String'
    post_tag_ref: 'post_tag_ref'
  }
  user: { // field return type name
    email: 'String'
    id: 'String'
    image: 'String'
    introduction: 'String'
    social: 'Json'
    velog_name: 'String'
  }
}

export interface NexusGenArgTypes {
  Query: {
    post: { // args
      where: NexusGenInputs['postWhereUniqueInput']; // postWhereUniqueInput!
    }
    user: { // args
      where: NexusGenInputs['userWhereUniqueInput']; // userWhereUniqueInput!
    }
  }
  comment: {
    other_comment: { // args
      cursor?: NexusGenInputs['commentWhereUniqueInput'] | null; // commentWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  post: {
    comment: { // args
      cursor?: NexusGenInputs['commentWhereUniqueInput'] | null; // commentWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    interest: { // args
      cursor?: NexusGenInputs['interestWhereUniqueInput'] | null; // interestWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    post_tag_ref: { // args
      cursor?: NexusGenInputs['post_tag_refWhereUniqueInput'] | null; // post_tag_refWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    read: { // args
      cursor?: NexusGenInputs['readWhereUniqueInput'] | null; // readWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  tag: {
    post_tag_ref: { // args
      cursor?: NexusGenInputs['post_tag_refWhereUniqueInput'] | null; // post_tag_refWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}